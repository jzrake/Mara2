#!/usr/bin/python
#sample command
#./plote total_energy run 100 200 500 1000 (for example)
#run simulations and plot
def plot_ts(time_series):
	import matplotlib.pyplot as plt
	import sys, os, h5py
	if (sys.argv[2]=='run'):
		for N in sys.argv[3:]:
			os.system("./mara convect N=" + N)
			os.system("mkdir ./data/plot" + N)
			os.system("mv ./data/*.h5 ./data/plot" + N)
			path = './data/plot' + N + '/chkpt.4400.h5' #make this the last h5file
			fileobj = h5py.File(path, 'r')
			time_series_data = fileobj['/time_series/'+time_series]
			time = fileobj['/time_series/time']
			plt.plot(time, time_series_data, label = "N=" + N)
	else:
		for N in sys.argv[2:]:
			path = './data/plot' + N + '/chkpt.4400.h5'
			fileobj = h5py.File(path, 'r')
			time_series_data = fileobj['/time_series/'+time_series]
			time = fileobj['/time_series/time']
			plt.plot(time, time_series_data, label = "N=" + N)

	plt.xlabel("Time (s)"), plt.ylabel(time_series)
	plt.legend(), plt.savefig(time_series+".png"), plt.show()

if __name__ == "__main__":
	import sys
	plot_ts(sys.argv[1])
